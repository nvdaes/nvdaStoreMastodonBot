name: Check files changed and send toot

on:
  workflow_dispatch:
  
  workflow_call:

  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '*/5 * * * *'
    
jobs:

  diffs:
  
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:

    - name: Checkout current
      uses: actions/checkout@v3
      with:
         repository: nvdaes/nvdaStoreMastodonBot
         path: main


    - name: Read current sha
      id: currentSha
      uses: actions/github-script@v6
      with:
        script: |
          const cacheUrl = 'https://www.nvaccess.org/addonStore/cacheHash.json'
          const result = await github.request(cacheUrl)
          const data = result.data
          return data.trim()
        result-encoding: string
    - name: Restore cached hash
      id: cache
      uses: actions/cache/restore@v3
      with:
        path: |
          ./sha.txt
        key: ${{ steps.currentSha.outputs.result }}
    - name: Exit if store is the same
      if: steps.cache.outputs.cache-hit == 'true'
      run: exit 0
    - name: Write current sha
      run: |
        echo "${{steps.currentSha.outputs.result}}" > ./sha.txt
    - name: Read previous sha
      id: prevSha
      uses: juliangruber/read-file-action@v1
      with:
        path: ./sha.txt
        trim: true
    - name: Checkout store
      uses: actions/checkout@v3
      with:
         repository: nvaccess/addon-datastore
         path: store
         fetch-depth: 0

    - name: Write diff
      run: |
        cd store
        git checkout views
        git diff --numstat ${{ steps.prevSha.outputs.content }}..HEAD views/en/latest > ../diff.txt
    - name: Read diff
      id: diff
      uses: juliangruber/read-file-action@v1
      with:
        path: ./diff.txt
    - name: Process diff
      id: processDiff
      uses: actions/github-script@v6
      with:
        script: |
          const diff = `${{ steps.diff.outputs.content }}`
          const filesChanged = diff.split('\n')
          const numberOfFilesChanged = filesChanged.length -1
          core.setOutput('numberOfFilesChanged', numberOfFilesChanged)
          var filename
          if (numberOfFilesChanged === 1) {
            let file = filesChanged[0]
            var filename = file.split(/\t/)[2]
          }
          core.setOutput('filename', filename)
          console.log(`${numberOfFilesChanged} ${diff}`)
          var display = ``
          var displayEs = ``
          function updated(value) { return value.startsWith('1') }
          function removed(value) { return value.startsWith('0') }
          const filesUpdated = filesChanged.filter(updated)
          const filesRemoved = filesChanged.filter(removed)
          if (filesUpdated.length > 0) {
            display += `Updated add-ons: ` 
            displayEs += `Complementos actualizados: ` 
          }
          for (file of filesUpdated) {
            let id = file.split('/')[3]
            let jsonFile = file.split('/')[4]
            if (id === undefined) {
              continue
            }
            let fileToDisplay = `${id} ${jsonFile}`.slice(0, -5) + '\n'
            let fileToDisplayEs = (`${id} ${jsonFile}`.slice(0, -5) + '\n').replace('stable', 'estable')
            display += fileToDisplay
            displayEs += fileToDisplayEs
          }
          if (filesRemoved.length > 0) {
            display += `Removed add-ons: ` 
            displayEs += `Complementos eliminados: ` 
          }
          for (file of filesRemoved) {
            let id = file.split('/')[3]
            let jsonFile = file.split('/')[4]
            if (id === undefined) {
              continue
            }
            let fileToDisplay = `${id} ${jsonFile}`.slice(0, -5) + '\n'
            let fileToDisplayEs = (`${id} ${jsonFile}`.slice(0, -5) + '\n').replace('stable', 'estable')
            display += fileToDisplay
            displayEs += fileToDisplayEs
          }
          console.log(display)
          core.setOutput('display', display)
          core.setOutput('displayEs', displayEs)
        result-encoding: string
    - name: Get metadata

      id: getMetadata
      if: ${{ steps.processDiff.outputs.filename }}
      uses: ActionsTools/read-json-action@main
      with:
        file_path: "store/${{ steps.processDiff.outputs.filename }}"
    - name: Build toot

      id: buildToot
      if: '${{ steps.diff.outputs.content }} != "\n"'
      uses: actions/github-script@v6
      with:
        script: |
          var toot = ``
          const numberOfFilesChanged = ${{ steps.processDiff.outputs.numberOfFilesChanged }}
          if (numberOfFilesChanged === 0) {
            core.setOutput('toot', toot)
            return
          }
          var toot = `${{ steps.processDiff.outputs.display }}`
          if (numberOfFilesChanged === 1) {
            const homepage = `${{ steps.getMetadata.outputs.homepage }}`
            const url = `${{ steps.getMetadata.outputs.URL}}`
            const sha = `${{ steps.getMetadata.outputs.sha256 }}`
            toot += `Homepage: ${homepage}\n`
            toot += `Download: ${url}\n`
            toot += `SHA256: ${sha}\n`
          }
          const curSha = `${{ steps.currentSha.outputs.result }}`
          toot += `Commit: https://github.com/nvaccess/addon-datastore/commit/${curSha}\n`
          toot += '#NVDA #bot'
          console.log(toot)
          core.setOutput('toot', toot) 
        result-encoding: string
    # - name: Send toot to Mastodon
      # id: mastodon
      # if: ${{ steps.buildToot.outputs.toot }}
      # uses: cbrgm/mastodon-github-action@v1
      # with:
        # message: ${{ steps.buildToot.outputs.toot }}
        # visibility: "public" # default: public
      # env:
        # MASTODON_URL: ${{ secrets.MASTODON_URL }} # https://example.social
        # MASTODON_ACCESS_TOKEN: ${{ secrets.MASTODON_ACCESS_TOKEN }} # access token

    - name: Build mail
      id: buildMail
      uses: actions/github-script@v6
      with:
        script: |
          var mailBody = ``
          const numberOfFilesChanged = ${{ steps.processDiff.outputs.numberOfFilesChanged }}
          if (numberOfFilesChanged === 0) {
            return
          }
          var mailBody = `${{ steps.processDiff.outputs.displayEs }}`
          if (numberOfFilesChanged === 1) {
            const addonVersionName = `${{ steps.getMetadata.outputs.addonVersionName }}`
            const publisher = `${{ steps.getMetadata.outputs.publisher }}`
            const homepage = `${{ steps.getMetadata.outputs.homepage }}`
            const url = `${{ steps.getMetadata.outputs.URL}}`
            const sourceURL = `${{ steps.getMetadata.outputs.sourceURL }}`
            const sha = `${{ steps.getMetadata.outputs.sha256 }}`
            mailBody += `Versión: ${addonVersionName}\n`
            mailBody += `Publicado por ${publisher}\n`
            mailBody += `Página de inicio: ${homepage}\n`
            mailBody += `Descarga: ${url}\n`
            mailBody += `Código fuente: ${sourceURL}\n`
            mailBody += `SHA256: ${sha}\n`
          }
          const curSha = `${{ steps.currentSha.outputs.result }}`
          mailBody += `Referencia en addon-datastore: https://github.com/nvaccess/addon-datastore/commit/${curSha}`
          console.log(mailBody)
          core.setOutput('mailBody', mailBody) 
        result-encoding: string
    # - name: Send mail
      # if: ${{ steps.buildMail.outputs.mailBody }}
      # uses: dawidd6/action-send-mail@v3
      # with:
        # server_address: smtp.gmail.com
        # server_port: 465
        # username: ${{secrets.MAIL_USERNAME}}
        # password: ${{secrets.MAIL_PASSWORD}}
        # subject: 'Complementos #bot'
        # to: lista@nvdaes.groups.io
        # from: Noelia Ruiz
        # body: ${{steps.buildMail.outputs.mailBody }}
    - name: Save hash
      id: cacheHashSave
      uses: actions/cache/save@v3
      with:
        path: |
          ./store
        key: ${{ steps.cacheHashRestore.outputs.cache-primary-key }}
